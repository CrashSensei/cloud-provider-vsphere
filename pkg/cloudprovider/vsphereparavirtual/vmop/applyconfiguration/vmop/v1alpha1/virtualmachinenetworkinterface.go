/*
Copyright 2021 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// VirtualMachineNetworkInterfaceApplyConfiguration represents an declarative configuration of the VirtualMachineNetworkInterface type for use
// with apply.
type VirtualMachineNetworkInterfaceApplyConfiguration struct {
	NetworkType      *string                                              `json:"networkType,omitempty"`
	NetworkName      *string                                              `json:"networkName,omitempty"`
	ProviderRef      *NetworkInterfaceProviderReferenceApplyConfiguration `json:"providerRef,omitempty"`
	EthernetCardType *string                                              `json:"ethernetCardType,omitempty"`
}

// VirtualMachineNetworkInterfaceApplyConfiguration constructs an declarative configuration of the VirtualMachineNetworkInterface type for use with
// apply.
func VirtualMachineNetworkInterface() *VirtualMachineNetworkInterfaceApplyConfiguration {
	return &VirtualMachineNetworkInterfaceApplyConfiguration{}
}

// WithNetworkType sets the NetworkType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NetworkType field is set to the value of the last call.
func (b *VirtualMachineNetworkInterfaceApplyConfiguration) WithNetworkType(value string) *VirtualMachineNetworkInterfaceApplyConfiguration {
	b.NetworkType = &value
	return b
}

// WithNetworkName sets the NetworkName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NetworkName field is set to the value of the last call.
func (b *VirtualMachineNetworkInterfaceApplyConfiguration) WithNetworkName(value string) *VirtualMachineNetworkInterfaceApplyConfiguration {
	b.NetworkName = &value
	return b
}

// WithProviderRef sets the ProviderRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProviderRef field is set to the value of the last call.
func (b *VirtualMachineNetworkInterfaceApplyConfiguration) WithProviderRef(value *NetworkInterfaceProviderReferenceApplyConfiguration) *VirtualMachineNetworkInterfaceApplyConfiguration {
	b.ProviderRef = value
	return b
}

// WithEthernetCardType sets the EthernetCardType field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EthernetCardType field is set to the value of the last call.
func (b *VirtualMachineNetworkInterfaceApplyConfiguration) WithEthernetCardType(value string) *VirtualMachineNetworkInterfaceApplyConfiguration {
	b.EthernetCardType = &value
	return b
}
